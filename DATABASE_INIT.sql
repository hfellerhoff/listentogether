--
-- Name: messages; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.messages (
    id integer NOT NULL,
    type character varying DEFAULT 'chat'::character varying NOT NULL,
    content text NOT NULL,
    "timestamp" timestamp without time zone DEFAULT now() NOT NULL,
    room_id integer,
    user_id integer
);


ALTER TABLE public.messages OWNER TO postgres;

--
-- Name: messages_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.messages ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.messages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: rooms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rooms (
    id integer NOT NULL,
    owner_id integer NOT NULL,
    name character varying DEFAULT 'New Room'::character varying NOT NULL,
    "isPublic" boolean DEFAULT true NOT NULL,
    slug character varying NOT NULL,
    visibility text NOT NULL,
    creator_id text NOT NULL
);


ALTER TABLE public.rooms OWNER TO postgres;

--
-- Name: rooms_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.rooms ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.rooms_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: songs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.songs (
    id integer NOT NULL,
    "spotifyUri" character varying,
    progress bigint DEFAULT '0'::bigint NOT NULL,
    "isPaused" boolean DEFAULT true NOT NULL,
    "updatedAt" timestamp without time zone DEFAULT now() NOT NULL,
    "addedAt" timestamp without time zone DEFAULT now() NOT NULL,
    room_id integer,
    youtube_video_id character varying,
    duration_ms bigint NOT NULL
);

ALTER TABLE ONLY public.songs REPLICA IDENTITY FULL;


ALTER TABLE public.songs OWNER TO postgres;

--
-- Name: COLUMN songs.youtube_video_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.songs.youtube_video_id IS 'If this is a YouTube video, this is the unique video ID.';


--
-- Name: COLUMN songs.duration_ms; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.songs.duration_ms IS 'The duration of the song in milliseconds.';


--
-- Name: songs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.songs ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.songs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id integer NOT NULL,
    service character varying DEFAULT 'spotify'::character varying NOT NULL,
    online boolean DEFAULT false NOT NULL,
    name character varying NOT NULL,
    "imageSrc" character varying,
    "serviceId" character varying NOT NULL
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


CREATE TABLE public.profiles (
  id text NOT NULL,
  service character varying DEFAULT 'spotify'::character varying NOT NULL,
  service_id text NULL,
  service_avatar_url text NULL,
  service_display_name text NULL,
  display_name text NULL
)

ALTER TABLE public.profiles OWNER TO postgres;